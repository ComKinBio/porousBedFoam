/*--------------------------------*- C++ -*----------------------------------*\
| =========                 |                                                 |
| \\      /  F ield         | OpenFOAM: The Open Source CFD Toolbox           |
|  \\    /   O peration     | Version:  v1806                                 |
|   \\  /    A nd           | Web:      www.OpenFOAM.com                      |
|    \\/     M anipulation  |                                                 |
\*---------------------------------------------------------------------------*/
FoamFile
{
    version     2.0;
    format      ascii;
    class       dictionary;
    location    "system";
    object      fvSchemes;
}
// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * //

ddtSchemes
{
    default         Euler;
}

gradSchemes
{
    default         Gauss linear;
}

divSchemes
{
    default         none;
    
    //original
//     div(alphaRhoPhi,U)      Gauss upwind;
//     div((alphaf*phid),p)     Gauss upwind;
//     div(alphaRhoPhi,K)      Gauss linear;
//     div(alphaRhoPhi,h)     Gauss upwind;
//     div(alphaRhoPhi,k)      Gauss upwind;
//     div(alphaRhoPhi,epsilon) Gauss upwind;
//     div(U)          Gauss linear;
//     div((((alpha*rho)*nuEff)*dev2(T(grad(U))))) Gauss linear;
//     div(alphaRhoPhi,Yi_h)   Gauss upwind;
//     div(Ji,Ii_h)    Gauss upwind;;
    
    //change to higher order
    div(alphaRhoPhi,U)          Gauss limitedLinearV 1;
    div((alphaf*phid),p)        Gauss limitedLinear 1;
    div(alphaRhoPhi,K)          Gauss limitedLinear 1;
    div(alphaRhoPhi,h)          Gauss limitedLinear 1;
    div(alphaRhoPhi,k)          Gauss limitedLinear 1;
    div(alphaRhoPhi,epsilon)    Gauss limitedLinear 1;
    div(U)                      Gauss linear;
    div((((alpha*rho)*nuEff)*dev2(T(grad(U))))) Gauss linear;
    div(alphaRhoPhi,Yi_h)       Gauss limitedLinear01 1;
    div(Ji,Ii_h)                Gauss limitedLinear 1;
    
}

laplacianSchemes
{
    default         Gauss linear orthogonal;
}

interpolationSchemes
{
    default         linear;
}

snGradSchemes
{
    default         orthogonal;
}


// ************************************************************************* //
